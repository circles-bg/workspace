name: Automated Codebase Improvement

on:
  schedule:
    # Run every hour
    - cron: '0 * * * *'
  workflow_dispatch: # Allow manual trigger

env:
  CARGO_TERM_COLOR: always

jobs:
  improvement-cycle:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2024-09-01  # Use nightly for 2024 edition
        override: true
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install additional tools
      run: |
        cargo install cargo-audit || true
        cargo install cargo-udeps || true
    
    - name: Run improvement cycle
      run: |
        # Set up git configuration
        git config --global user.name "Automated Improvement Bot"
        git config --global user.email "bot@improvement.local"
        
        # Run the improvement script
        chmod +x scripts/improvement-cycle.sh
        ./scripts/improvement-cycle.sh single
    
    - name: Check for changes and commit
      run: |
        if ! git diff --quiet || ! git diff --cached --quiet; then
          echo "Changes detected, creating pull request..."
          
          # Create a new branch for the improvements
          BRANCH="auto-improvement-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH"
          
          # Add and commit all changes
          git add .
          git commit -m "ðŸ¤– Automated codebase improvements
          
          - Applied clippy fixes and suggestions
          - Formatted code with rustfmt
          - Updated documentation
          - Verified all tests pass
          - Optimized release build
          
          Generated by automated improvement cycle"
          
          # Push the branch
          git push origin "$BRANCH"
          
          echo "Branch $BRANCH created and pushed"
        else
          echo "No changes needed - codebase is already optimized!"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
